
$font-sizes: (
  small: 0.8rem,
  medium: 1rem,
  large: 1.3rem
);

@mixin font-size($size: regular) {
  font-size: map-get($font-sizes, $size);
}

@mixin link-builder($color-map, $selector: 'a') {
  #{$selector} {
    @extend .opensans-w600;

    color: map-get($color-map, base);

    text-decoration: none;

    &.hover,
    &:hover {
      color: map-get($color-map, hover);

      text-decoration: underline;
    }

    &.active,
    &:active {
      color: map-get($color-map, active);

      text-decoration: none;
    }

    &.disabled {
      color: map-get($color-map, disabled);

      text-decoration: none;

      cursor: default;
    }
  }
}

html, body {
  // Set base font size.
  font-size: $base-font-size;

  // Set base color.
  color: map-get($clr-bodytext, base);
}

// Headlines
$header-font-size: 1rem;
@for $i from 6 through 1 {
  h#{$i} {
    @extend .opensans-w600;

    font-size: $header-font-size;
  }

  // Bump the font size by 130% for the next header.
  $header-font-size: $header-font-size * 1.3;
}

// Basic text styles
p,
blockquote {
  @extend .opensans-w400;
  line-height: 150%;
}

em, i {
  @extend .opensans-w400i;
}

strong, b {
  @extend .opensans-w700;
}

cite {
  @extend .opensans-w300i;
}

blockquote {
  border-left: 2px solid map-get($clr-default, base);
  margin-left: 5px;

  padding-left: 10px;
  padding-top: 3px;
  padding-bottom: 5px;

  cite {
    padding-top: 2px;
    display: block;
  }
}

p {
  @include font-size(medium);

  &.large {
    @include font-size(large);
  }

  &.small {
    @include font-size(small);

    em, i {
      @extend .opensans-w300i;
    }

    strong, b {
      @extend .opensans-w600;
    }
  }
}

// Links
@include link-builder($clr-default, 'a');
@include link-builder($clr-primary, 'a.primary');
@include link-builder($clr-secondary, 'a.secondary');
